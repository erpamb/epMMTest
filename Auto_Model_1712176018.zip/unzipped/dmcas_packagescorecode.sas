/*----------------------------------------------------------------------------------*/
/* Product:            Visual Data Mining and Machine Learning                      */
/* Release Version:    V2023.04                                                     */
/* Component Version:  V2023.03                                                     */
/* CAS Version:        V.04.00M0P03302023                                           */
/* SAS Version:        V.04.00M0P040923                                             */
/* Site Number:        70180938                                                     */
/* Host:               sas-cas-server-default-client                                */
/* Encoding:           utf-8                                                        */
/* Java Encoding:      UTF8                                                         */
/* Locale:             en_US                                                        */
/* Project GUID:       5b27354e-28a2-49f1-8cd4-16c5315bc1b4                         */
/* Node GUID:          41e1c74b-834a-4f41-acc1-ddcaf56fb809                         */
/* Node Id:            3WEVP2SW6JE6PTWCV0OEMK8W9                                    */
/* Algorithm:          Bayesian Network                                             */
/* Generated by:       edmdev                                                       */
/* Date:               11APR2023:01:08:48                                           */
/*----------------------------------------------------------------------------------*/
package MS_41e1c74b834a4f41acc1ddcaf56fb809_11APR2023010848225 / overwrite=yes;
   dcl double "CLAGE";
   dcl double "CLNO";
   dcl double "DEBTINC";
   dcl double "DELINQ";
   dcl double "DEROG";
   dcl nchar(7) "JOB";
   dcl double "MORTDUE";
   dcl double "NINQ";
   dcl nchar(7) "REASON";
   dcl double "VALUE";
   dcl double "YOJ";
   dcl double "IMP_VALUE" having label n'Imputed VALUE';
   dcl double "IMP_YOJ" having label n'Imputed YOJ';
   dcl package score _3WEVP2SW6JE6PTWCV0OEMK8W9();
   dcl double EM_EVENTPROBABILITY;
   dcl nchar(12) EM_CLASSIFICATION;
   dcl double "IMP_DELINQ" having label n'Imputed DELINQ';
   dcl double EM_PROBABILITY;
   dcl double "IMP_DEROG" having label n'Imputed DEROG';
   dcl nchar(7) "IMP_JOB" having label n'Imputed JOB';
   dcl double "IMP_NINQ" having label n'Imputed NINQ';
   dcl nchar(7) "IMP_REASON" having label n'Imputed REASON';
   dcl double "IMP_CLAGE" having label n'Imputed CLAGE';
   dcl double "IMP_CLNO" having label n'Imputed CLNO';
   dcl double "IMP_DEBTINC" having label n'Imputed DEBTINC';
   dcl double "IMP_MORTDUE" having label n'Imputed MORTDUE';
   dcl double "LOAN";
   dcl double "P_BAD1" having label n'Predicted: BAD=1';
   dcl double "P_BAD0" having label n'Predicted: BAD=0';
   dcl nchar(12) "I_BAD" having label n'Into: BAD';
   dcl nchar(4) "_WARN_" having label n'Warnings';
   varlist allvars [_all_];
 
    
   method init();
      _3WEVP2SW6JE6PTWCV0OEMK8W9.setvars(allvars);
      _3WEVP2SW6JE6PTWCV0OEMK8W9.setkey(n'016C3D0D8B92A6177D576CE0B9EF500EB4E0163B');
   end;
    
   method _2PIHRSF1FIXSL44OO1FSM7068();
       
      if MISSING("CLAGE") then do ;
      "IMP_CLAGE" = 182.72103159;
      end;
      else "IMP_CLAGE" = "CLAGE";
      if MISSING("CLNO") then do ;
      "IMP_CLNO" = 21.133236785;
      end;
      else "IMP_CLNO" = "CLNO";
      if MISSING("DEBTINC") then do ;
      "IMP_DEBTINC" = 33.34492691;
      end;
      else "IMP_DEBTINC" = "DEBTINC";
      if MISSING("DELINQ") then do ;
      "IMP_DELINQ" = 0.0;
      end;
      else "IMP_DELINQ" = "DELINQ";
      if MISSING("DEROG") then do ;
      "IMP_DEROG" = 0.0;
      end;
      else "IMP_DEROG" = "DEROG";
      if MISSING("JOB") then do ;
      "IMP_JOB" = 'Other';
      end;
      else "IMP_JOB" = "JOB";
      if MISSING("MORTDUE") then do ;
      "IMP_MORTDUE" = 74297.910752;
      end;
      else "IMP_MORTDUE" = "MORTDUE";
      if MISSING("NINQ") then do ;
      "IMP_NINQ" = 0.0;
      end;
      else "IMP_NINQ" = "NINQ";
      if MISSING("REASON") then do ;
      "IMP_REASON" = 'DebtCon';
      end;
      else "IMP_REASON" = "REASON";
      if MISSING("VALUE") then do ;
      "IMP_VALUE" = 103838.32787;
      end;
      else "IMP_VALUE" = "VALUE";
      if MISSING("YOJ") then do ;
      "IMP_YOJ" = 8.8720137825;
      end;
      else "IMP_YOJ" = "YOJ";
    
   end;
    
   method post_3WEVP2SW6JE6PTWCV0OEMK8W9();
      dcl double _P_;
       
      if "P_BAD0" = . then "P_BAD0" = 0.8000839983;
      if "P_BAD1" = . then "P_BAD1" = 0.1999160017;
      if MISSING("I_BAD") then do ;
      _P_ = 0.0;
      if "P_BAD1" > _P_ then do ;
      _P_ = "P_BAD1";
      "I_BAD" = '           1';
      end;
      if "P_BAD0" > _P_ then do ;
      _P_ = "P_BAD0";
      "I_BAD" = '           0';
      end;
      end;
      EM_EVENTPROBABILITY = "P_BAD1";
      EM_CLASSIFICATION = "I_BAD";
      EM_PROBABILITY = MAX("P_BAD1", "P_BAD0");
    
   end;
    
 
   method score(
      double "CLAGE",
      double "CLNO",
      double "DEBTINC",
      double "DELINQ",
      double "DEROG",
      char(7) "JOB",
      double "LOAN",
      double "MORTDUE",
      double "NINQ",
      char(7) "REASON",
      double "VALUE",
      double "YOJ",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT double "IMP_CLAGE",
      IN_OUT double "IMP_CLNO",
      IN_OUT double "IMP_DEBTINC",
      IN_OUT double "IMP_DELINQ",
      IN_OUT double "IMP_DEROG",
      IN_OUT char(7) "IMP_JOB",
      IN_OUT double "IMP_MORTDUE",
      IN_OUT double "IMP_NINQ",
      IN_OUT char(7) "IMP_REASON",
      IN_OUT double "IMP_VALUE",
      IN_OUT double "IMP_YOJ",
      IN_OUT char(12) "I_BAD",
      IN_OUT double "P_BAD0",
      IN_OUT double "P_BAD1",
      IN_OUT double "_P_",
      IN_OUT char(4) "_WARN_"
   );
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DEBTINC"= "DEBTINC";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."LOAN"= "LOAN";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."REASON"= "REASON";
      this."VALUE"= "VALUE";
      this."YOJ"= "YOJ";
 
      _2PIHRSF1FIXSL44OO1FSM7068();
      _3WEVP2SW6JE6PTWCV0OEMK8W9.scoreRecord();
      post_3WEVP2SW6JE6PTWCV0OEMK8W9();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "IMP_CLAGE"= this."IMP_CLAGE";
      "IMP_CLNO"= this."IMP_CLNO";
      "IMP_DEBTINC"= this."IMP_DEBTINC";
      "IMP_DELINQ"= this."IMP_DELINQ";
      "IMP_DEROG"= this."IMP_DEROG";
      "IMP_JOB"= this."IMP_JOB";
      "IMP_MORTDUE"= this."IMP_MORTDUE";
      "IMP_NINQ"= this."IMP_NINQ";
      "IMP_REASON"= this."IMP_REASON";
      "IMP_VALUE"= this."IMP_VALUE";
      "IMP_YOJ"= this."IMP_YOJ";
      "I_BAD"= this."I_BAD";
      "P_BAD0"= this."P_BAD0";
      "P_BAD1"= this."P_BAD1";
      "_P_"= this."_P_";
      "_WARN_"= this."_WARN_";
   end;
 
 
   method predictedscore(
      double "CLAGE",
      double "CLNO",
      double "DEBTINC",
      double "DELINQ",
      double "DEROG",
      char(7) "JOB",
      double "LOAN",
      double "MORTDUE",
      double "NINQ",
      char(7) "REASON",
      double "VALUE",
      double "YOJ",
      IN_OUT char(12) "EM_CLASSIFICATION",
      IN_OUT double "EM_EVENTPROBABILITY",
      IN_OUT double "EM_PROBABILITY",
      IN_OUT char(12) "I_BAD",
      IN_OUT double "P_BAD0",
      IN_OUT double "P_BAD1",
      IN_OUT char(4) "_WARN_"
   );
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DEBTINC"= "DEBTINC";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."LOAN"= "LOAN";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."REASON"= "REASON";
      this."VALUE"= "VALUE";
      this."YOJ"= "YOJ";
 
      _2PIHRSF1FIXSL44OO1FSM7068();
      _3WEVP2SW6JE6PTWCV0OEMK8W9.scoreRecord();
      post_3WEVP2SW6JE6PTWCV0OEMK8W9();
 
      "EM_CLASSIFICATION"= this."EM_CLASSIFICATION";
      "EM_EVENTPROBABILITY"= this."EM_EVENTPROBABILITY";
      "EM_PROBABILITY"= this."EM_PROBABILITY";
      "I_BAD"= this."I_BAD";
      "P_BAD0"= this."P_BAD0";
      "P_BAD1"= this."P_BAD1";
      "_WARN_"= this."_WARN_";
   end;
 
endpackage;
