/*----------------------------------------------------------------------------------*/
/* Product:            Visual Data Mining and Machine Learning                      */
/* Release Version:    V2020.1.2                                                    */
/* Component Version:  V2020.1.1                                                    */
/* CAS Version:        V.04.00M0P01122021                                           */
/* SAS Version:        V.04.00M0P011221                                             */
/* Site Number:        70180938                                                     */
/* Host:               controller.sas-cas-server-default.purple.svc.cluster.local   */
/* Encoding:           utf-8                                                        */
/* Java Encoding:      UTF8                                                         */
/* Locale:             en_US                                                        */
/* Project GUID:       ae96cd5e-746e-4851-820d-f71972ed8010                         */
/* Node GUID:          65433aac-d152-418e-ba50-6e0bbd523ccd                         */
/* Node Id:            5ZTIC75GFH352E5HI9SI9MJF1                                    */
/* Algorithm:          Linear Regression                                            */
/* Generated by:       edmdev                                                       */
/* Date:               13JAN2021:23:28:48                                           */
/*----------------------------------------------------------------------------------*/
package MS_65433aacd152418eba506e0bbd523ccd_13JAN2021232848965 / overwrite=yes;
   dcl double "P_DEBTINC" having label n'Predicted: DEBTINC';
   dcl double "EM_PREDICTION";
   varlist allvars [_all_];
 
   method _5ZTIC75GFH352E5HI9SI9MJF1();
      dcl double _J_;
      dcl double _I_;
      dcl double _TEMP_;
      dcl double _LINP_;
      dcl double _BADVAL_;
      dcl nchar(7) _JOB_;
      dcl nchar(2) _NINQ_;
      dcl nchar(2) _DEROG_;
      dcl nchar(1) _BAD_;
      dcl nchar(2) _DELINQ_;
      dcl nchar(7) _REASON_;
      dcl double _BETA_47092167_0_[47];
      dcl double _XROW_47092167_0_[47];
       
      _BETA_47092167_0_:=(35.2938690621398, -0.00316801632733, 0.07786686829728,
      0.00007312982284, 0.0000387204672, -0.00001429869263, 0.01776027953126,
      -3.89177968290856, 0, 2.41423289467985, 1.01147060535678, 2.48618041566518,
      2.8789877384842, -1.9502737610076, 4.98274398591374, 19.0130843547702,
      0, 0, -0.21675095335064, -0.48308473446692, -1.89098467823302, -4.09118704153411,
      0, 0, 0, 0, -0.46812012859749, -0.8636133621023, -0.37711853118967, -2.98976757778881,
      1.69578552895761, 0, -3.52978125478295, -1.52235961621419, -1.036890003916,
      0.04102415679592, 0.69940087729199, 3.18330571963071, -1.34122633761735,
      1.55964927244529, -16.6516421879405, -0.93939190305239, 1.30149942144832,
      0, 0, -1.17472895287215, 0);
      _BADVAL_ = 0.0;
      _LINP_ = 0.0;
      _TEMP_ = 0.0;
      _I_ = 0.0;
      _J_ = 0.0;
      _JOB_ = LEFT(TRIM(put(JOB, $7.)));
      _NINQ_ = LEFT(TRIM(put(NINQ, BEST2.)));
      _DEROG_ = LEFT(TRIM(put(DEROG, BEST2.)));
      _BAD_ = LEFT(TRIM(put(BAD, BEST1.)));
      _DELINQ_ = LEFT(TRIM(put(DELINQ, BEST2.)));
      _REASON_ = LEFT(TRIM(put(REASON, $7.)));
      if MISSING(CLNO) | MISSING(MORTDUE) | MISSING(VALUE) | MISSING(LOAN) |
      MISSING(YOJ) | MISSING(CLAGE) then do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      do _I_ = 1.0 to 47.0;
      _XROW_47092167_0_[_I_] = 0.0;
      end;
      _XROW_47092167_0_[1.0] = 1.0;
      _XROW_47092167_0_[2.0] = CLAGE;
      _XROW_47092167_0_[3.0] = CLNO;
      _XROW_47092167_0_[4.0] = LOAN;
      _XROW_47092167_0_[5.0] = MORTDUE;
      _XROW_47092167_0_[6.0] = VALUE;
      _XROW_47092167_0_[7.0] = YOJ;
      _TEMP_ = 1.0;
      select (_BAD_);
      when ('0') _XROW_47092167_0_[8.0] = _TEMP_;
      when ('1') _XROW_47092167_0_[9.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      _TEMP_ = 1.0;
      select (_DELINQ_);
      when ('0') _XROW_47092167_0_[10.0] = _TEMP_;
      when ('1') _XROW_47092167_0_[11.0] = _TEMP_;
      when ('2') _XROW_47092167_0_[12.0] = _TEMP_;
      when ('3') _XROW_47092167_0_[13.0] = _TEMP_;
      when ('4') _XROW_47092167_0_[14.0] = _TEMP_;
      when ('5') _XROW_47092167_0_[15.0] = _TEMP_;
      when ('6') _XROW_47092167_0_[16.0] = _TEMP_;
      when ('7') _XROW_47092167_0_[17.0] = _TEMP_;
      when ('10') _XROW_47092167_0_[18.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      _TEMP_ = 1.0;
      select (_DEROG_);
      when ('0') _XROW_47092167_0_[19.0] = _TEMP_;
      when ('1') _XROW_47092167_0_[20.0] = _TEMP_;
      when ('2') _XROW_47092167_0_[21.0] = _TEMP_;
      when ('3') _XROW_47092167_0_[22.0] = _TEMP_;
      when ('4') _XROW_47092167_0_[23.0] = _TEMP_;
      when ('5') _XROW_47092167_0_[24.0] = _TEMP_;
      when ('7') _XROW_47092167_0_[25.0] = _TEMP_;
      when ('10') _XROW_47092167_0_[26.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      _TEMP_ = 1.0;
      select (_JOB_);
      when ('Mgr') _XROW_47092167_0_[27.0] = _TEMP_;
      when ('Office') _XROW_47092167_0_[28.0] = _TEMP_;
      when ('Other') _XROW_47092167_0_[29.0] = _TEMP_;
      when ('ProfExe') _XROW_47092167_0_[30.0] = _TEMP_;
      when ('Sales') _XROW_47092167_0_[31.0] = _TEMP_;
      when ('Self') _XROW_47092167_0_[32.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      _TEMP_ = 1.0;
      select (_NINQ_);
      when ('0') _XROW_47092167_0_[33.0] = _TEMP_;
      when ('1') _XROW_47092167_0_[34.0] = _TEMP_;
      when ('2') _XROW_47092167_0_[35.0] = _TEMP_;
      when ('3') _XROW_47092167_0_[36.0] = _TEMP_;
      when ('4') _XROW_47092167_0_[37.0] = _TEMP_;
      when ('5') _XROW_47092167_0_[38.0] = _TEMP_;
      when ('6') _XROW_47092167_0_[39.0] = _TEMP_;
      when ('7') _XROW_47092167_0_[40.0] = _TEMP_;
      when ('8') _XROW_47092167_0_[41.0] = _TEMP_;
      when ('9') _XROW_47092167_0_[42.0] = _TEMP_;
      when ('10') _XROW_47092167_0_[43.0] = _TEMP_;
      when ('11') _XROW_47092167_0_[44.0] = _TEMP_;
      when ('13') _XROW_47092167_0_[45.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      _TEMP_ = 1.0;
      select (_REASON_);
      when ('DebtCon') _XROW_47092167_0_[46.0] = _TEMP_;
      when ('HomeImp') _XROW_47092167_0_[47.0] = _TEMP_;
      otherwise do ;
      _BADVAL_ = 1.0;
      goto SKIP_47092167_0;
      end;
      end;
      do _I_ = 1.0 to 47.0;
      _LINP_ + _XROW_47092167_0_[_I_] * _BETA_47092167_0_[_I_];
      end;
      SKIP_47092167_0: if (_BADVAL_ = 0.0) & ^MISSING(_LINP_) then do ;
      P_DEBTINC = _LINP_;
      end;
      else do ;
      _LINP_ = .;
      P_DEBTINC = .;
      end;
      if "P_DEBTINC" = . then "P_DEBTINC" = 33.473329522;
      EM_PREDICTION = "P_DEBTINC";
    
   end;
    
 
   method score(
      double "BAD",
      double "CLAGE",
      double "CLNO",
      double "DELINQ",
      double "DEROG",
      char(7) "JOB",
      double "LOAN",
      double "MORTDUE",
      double "NINQ",
      char(7) "REASON",
      double "VALUE",
      double "YOJ",
      IN_OUT double "EM_PREDICTION",
      IN_OUT double "P_DEBTINC"
   );
      this."BAD"= "BAD";
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."LOAN"= "LOAN";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."REASON"= "REASON";
      this."VALUE"= "VALUE";
      this."YOJ"= "YOJ";
 
      _5ZTIC75GFH352E5HI9SI9MJF1();
 
      "EM_PREDICTION"= this."EM_PREDICTION";
      "P_DEBTINC"= this."P_DEBTINC";
   end;
 
 
   method predictedscore(
      double "BAD",
      double "CLAGE",
      double "CLNO",
      double "DELINQ",
      double "DEROG",
      char(7) "JOB",
      double "LOAN",
      double "MORTDUE",
      double "NINQ",
      char(7) "REASON",
      double "VALUE",
      double "YOJ",
      IN_OUT double "EM_PREDICTION",
      IN_OUT double "P_DEBTINC"
   );
      this."BAD"= "BAD";
      this."CLAGE"= "CLAGE";
      this."CLNO"= "CLNO";
      this."DELINQ"= "DELINQ";
      this."DEROG"= "DEROG";
      this."JOB"= "JOB";
      this."LOAN"= "LOAN";
      this."MORTDUE"= "MORTDUE";
      this."NINQ"= "NINQ";
      this."REASON"= "REASON";
      this."VALUE"= "VALUE";
      this."YOJ"= "YOJ";
 
      _5ZTIC75GFH352E5HI9SI9MJF1();
 
      "EM_PREDICTION"= this."EM_PREDICTION";
      "P_DEBTINC"= this."P_DEBTINC";
   end;
 
endpackage;
